syntax = "proto3";

package book_shop;
option go_package = "genproto/book_shop";
import "messages.proto";

service User_service {
    rpc CreateUser (UserCreateReq) returns (User);
    rpc GetUser(GetByIdReq)returns(User);
    rpc GetUsers(GetListReq)returns(UserGetListResp);
    rpc UpdateUser(UserUpdateReq)returns (User);
    rpc DeleteUser(DeleteReq)returns(Empty);

}

service Auth_service {
    rpc CreateAuth (AuthorUpdateReq) returns (Author);
    rpc GetAuth(GetByIdReq)returns(Author);
    rpc GetAuths(GetListReq)returns(AuthorGetListResp);
    rpc UpdateAuth(AuthorUpdateReq)returns (User);
    rpc DeleteAuth(DeleteReq)returns(Empty);

}

service Category_service{
    rpc CreateCategory (CategoryCreateReq) returns (Category);
    rpc GetCategory(GetByIdReq)returns(Category);
    rpc GetCategories(GetListReq)returns(CategoryGetListResp);
    rpc UpdateCategory(CategoryUpdateReq)returns (Category);
    rpc DeleteCategory(DeleteReq)returns(Empty);

}

service Book_service {
    rpc CreateBook (BookCreateReq) returns (Book);
    rpc GetBook(GetByIdReq)returns(Book);
    rpc GetBooks(GetListReq)returns(BookGetListResp);
    rpc UpdateBook(BookUpdateReq)returns (Book);
    rpc DeleteBook(DeleteReq)returns(Empty);
}

service Order_service {
    rpc CreateOrder (OrderCreateReq) returns (Order);
    rpc GetOrder(GetByIdReq)returns(Order);
    rpc GetOrders(GetListReq)returns(OrderGetListResp);
    rpc Updateorder(OrderUpdateReq)returns (Order);
    rpc DeleteOrder(DeleteReq)returns(Empty);
}

service OrderedItem_service {
    rpc CreateOrdered_Item (OrderItemCreateReq) returns (OrderItem);
    rpc GetOrdered_Item(GetByIdReq)returns(OrderItem);
    rpc GetOrdered_ItemByOrderId(GetByIdReq)returns(OrderItemGetListResp);
    rpc GetOrdered_Items(GetListReq)returns(OrderItemGetListResp);
    rpc UpdateOrdered_Item (OrderItemCreateReq) returns (OrderItem);
    rpc DeleteOrdered_Item(DeleteReq)returns(Empty);
}

